plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.prime.toolz2"
        minSdk 21
        targetSdk 32
        versionCode 3
        versionName "1.0.0-alpha01"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            zipAlignEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // TODO - current only for debug version
            // needs to be removed
            // android team also released the latest technique for testing app with out
            // debug data; needs to study it further
            signingConfig signingConfigs.debug
            //debuggable true
        }

        debug {
            // makes it possible to install both release and debug versions in same device.
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
        freeCompilerArgs = [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xcontext-receivers"
        ]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    //Android KTX is a set of Kotlin extensions that are included with Android Jetpack and other Android libraries.
    implementation 'androidx.core:core-ktx:1.7.0'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.4.0'
    //implementation 'androidx.exifinterface:exifinterface:1.3.3'

    //tests
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.animation:animation-graphics:$compose_version"

    //ticker view
    implementation 'com.robinhood.ticker:ticker:2.0.4'

    //lottie
    def lottieVersion = '5.0.3'
    implementation "com.airbnb.android:lottie-compose:$lottieVersion"

    //Preferences and other widgets
    def tools_version = '1.0.1'
    implementation "com.github.prime-zs:tools:$tools_version"

    // Splash Screen API
    implementation 'androidx.core:core-splashscreen:1.0.0-rc01'

    // The Accompanist Libraries
    def accompanist_version = '0.24.9-beta'
    implementation "com.google.accompanist:accompanist-insets:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanist_version"

    //kotlin-serialization
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.3'

    implementation("me.nikhilchaudhari:composeNeumorphism:1.0.0-alpha02")

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'

    // Safe Args Compose
    def safe_args_version = "2.4.0"
    kapt "com.github.levinzonr.compose-safe-routing:compiler:$safe_args_version"
    implementation "com.github.levinzonr.compose-safe-routing:core:$safe_args_version"
    // or in case you are using animation/material routes from accompanist
    implementation "com.github.levinzonr.compose-safe-routing:accompanist-navigation:$safe_args_version"

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:30.0.2')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    // for support of multiple screen sizes
    implementation "androidx.window:window:1.0.0"
}