plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'kotlinx-serialization'
}

android {
    compileSdk 34
    namespace 'com.prime.toolz'

    defaultConfig {
        applicationId "com.prime.toolz2"
        minSdk 21
        targetSdk 33
        versionCode 44
        versionName "2.1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables { useSupportLibrary true }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true
            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true
            zipAlignEnabled true
            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix = ".debug"
            resValue "string", "app_name", "Toolz Debug"
            versionNameSuffix = "-debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn", "-Xcontext-receivers"]
    }

    buildFeatures { compose true }

    composeOptions { kotlinCompilerExtensionVersion '1.4.8' }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    //Android KTX is a set of Kotlin extensions that are included with Android Jetpack and other Android libraries.
    implementation 'androidx.core:core-ktx:1.10.1'
    // Compose
    def compose_version = '1.5.0-beta03'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation "androidx.compose.animation:animation-graphics:$compose_version"
    // Material 3
    def material3_version = '1.2.0-alpha03'
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation "androidx.compose.material3:material3-window-size-class:$material3_version"
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.2'
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Constraint layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    // Remove tests for now
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    // Lottie
    def lottie_version = '6.0.1'
    implementation "com.airbnb.android:lottie-compose:$lottie_version"
    // Preferences and other widgets
    def toolkit_version = '1.0.2-beta'
    implementation("com.github.prime-zs.toolkit:preferences:$toolkit_version")
    implementation("com.github.prime-zs.toolkit:core-ktx:$toolkit_version")
    implementation("com.github.prime-zs.toolkit:material3:$toolkit_version")
    // Splash Screen API
    implementation 'androidx.core:core-splashscreen:1.0.1'
    // Import the Firebase BoM
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.1.1')
    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    // Play In-App Update:
    def in_app_update_version = '2.1.0'
    implementation("com.google.android.play:app-update:$in_app_update_version")
    implementation("com.google.android.play:app-update-ktx:$in_app_update_version")
    // In-App-Review
    def in_app_review = '2.0.1'
    implementation("com.google.android.play:review:$in_app_review")
    implementation("com.google.android.play:review-ktx:$in_app_review")
    // Google play in-app billing
    def billing_version = '6.0.1'
    implementation "com.android.billingclient:billing:$billing_version"
    implementation "com.android.billingclient:billing-ktx:$billing_version"
    // Unity Ads
    implementation 'com.unity3d.ads:unity-ads:4.8.0'
    // Kotlin serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1")
    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:1.0.0"
    // ChatGPT dependency
    //implementation 'com.github.acsbendi:Android-Request-Inspector-WebView:1.0.3'
    //implementation 'org.jetbrains.kotlinx:kotlinx-serialization-cbor:1.2.2'
    def nav_version = "2.7.0-beta02"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    // Downloadable fonts
    implementation 'androidx.compose.ui:ui-text-google-fonts:1.4.3'
}